{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","components/App.js","apollo.js","index.js"],"names":["TOGGLE_LIKE_MOVIE","gql","Container","styled","div","Poster","props","bg","id","isLiked","useMutation","variables","parseInt","toggleLikeMovie","to","onClick","GET_MOVIES","Header","header","Title","h1","Subtitle","h3","Loading","Movies","useQuery","loading","error","data","console","log","movies","map","m","Movie","key","medium_cover_image","GET_MOVIE","Column","h4","Description","p","CloseButton","RightImages","Suggestions","Suggestion","useParams","movie","title","language","rating","description_intro","suggestions","s","window","location","href","App","exact","path","component","Home","Detail","client","ApolloClient","uri","resolvers","Mutation","_","cache","writeData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dd65e00.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nconst TOGGLE_LIKE_MOVIE = gql`\r\n  mutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\r\n    toggleLikeMovie(id: $id, isLiked: $isLiked) @client\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 380px;\r\n  width: 100%;\r\n  overflow: visible;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  height: 100%;\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  border-radius: 10px;\r\n  &:hover {\r\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\r\n  }\r\n`;\r\n\r\nexport default ({ id, bg, isLiked }) => {\r\n  const [toggleLikeMovie] = useMutation(TOGGLE_LIKE_MOVIE, {\r\n    variables: { id: parseInt(id), isLiked: isLiked },\r\n  });\r\n  return (\r\n    <Container>\r\n      <Link to={`/${id}`}>\r\n        <Poster bg={bg} />\r\n      </Link>\r\n      <button onClick={toggleLikeMovie}>{isLiked ? \"Unlike\" : \"Like\"}</button>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"../components/Movie\";\r\n\r\nconst GET_MOVIES = gql`\r\n  {\r\n    movies {\r\n      id\r\n      medium_cover_image\r\n      isLiked @client\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n  height: 45vh;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 60px;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Subtitle = styled.h3`\r\n  font-size: 35px;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  font-size: 18px;\r\n  opacity: 0.5;\r\n  font-weight: 500;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Movies = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 25px;\r\n  width: 65%;\r\n  position: relative;\r\n  top: -50px;\r\n`;\r\n\r\nexport default () => {\r\n  const { loading, error, data } = useQuery(GET_MOVIES);\r\n  console.log(loading, error ? true : false, data);\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>Movie App 2020</Title>\r\n        <Subtitle>I love watching movies..</Subtitle>\r\n      </Header>\r\n      {loading && <Loading>loading...</Loading>}\r\n\r\n      <Movies>\r\n        {data?.movies?.map((m) => (\r\n          <Movie\r\n            key={m.id}\r\n            id={m.id}\r\n            bg={m.medium_cover_image}\r\n            isLiked={m.isLiked}\r\n          />\r\n        ))}\r\n      </Movies>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GET_MOVIE = gql`\r\n  query getMovie($id: Int!) {\r\n    movie(id: $id) {\r\n      id\r\n      title\r\n      medium_cover_image\r\n      language\r\n      rating\r\n      description_intro\r\n      isLiked @client\r\n    }\r\n    suggestions(id: $id) {\r\n      id\r\n      medium_cover_image\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  color: white;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  margin: 0 10px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 65px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Subtitle = styled.h4`\r\n  font-size: 35px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 28px;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-bottom: 5px;\r\n  background-color: transparent;\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\n\r\nconst CloseButton = styled.div`\r\n  position: absolute;\r\n  top: 5vh;\r\n  right: 5vw;\r\n  font-size: 40px;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  &:hover {\r\n    font-size: 48px;\r\n  }\r\n`;\r\n\r\nconst RightImages = styled.div`\r\n  margin: 0 10px;\r\n  width: 25%;\r\n  height: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Suggestions = styled.div`\r\n  width: 100%;\r\n  min-height: 20%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  & > * {\r\n    width: 22%;\r\n  }\r\n`;\r\n\r\nconst Suggestion = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const { loading, data } = useQuery(GET_MOVIE, {\r\n    variables: { id: parseInt(id) },\r\n  });\r\n  return (\r\n    <Container>\r\n      <Column>\r\n        <Title>\r\n          {loading\r\n            ? \"loading\"\r\n            : `${data.movie.title} ${data.movie.isLiked ? \"❤\" : \"\"}`}\r\n          {loading ? console.log(\"loading\") : console.log(data.movie)}\r\n        </Title>\r\n        <Subtitle>\r\n          {data?.movie?.language} · {data?.movie?.rating}\r\n        </Subtitle>\r\n        <Description>{data?.movie?.description_intro}</Description>\r\n      </Column>\r\n      <RightImages>\r\n        <Poster bg={data?.movie ? data.movie.medium_cover_image : \"\"}></Poster>\r\n        <Suggestions>\r\n          {data?.suggestions?.map((s) => (\r\n            <Link to={`/${s.id}`} key={s.id}>\r\n              <Suggestion bg={s.medium_cover_image} />\r\n            </Link>\r\n          ))}\r\n        </Suggestions>\r\n      </RightImages>\r\n      <CloseButton onClick={() => (window.location.href = \"./#/\")}>\r\n        X\r\n      </CloseButton>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Detail from \"../routes/Detail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/:id\" component={Detail} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ApolloClient from \"apollo-boost\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://movieql2.now.sh/\",\r\n  resolvers: {\r\n    Movie: {\r\n      isLiked: () => false,\r\n    },\r\n    Mutation: {\r\n      toggleLikeMovie: (_, { id, isLiked }, { cache }) => {\r\n        cache.writeData({ id: `Movie:${id}`, data: { isLiked: !isLiked } });\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport client from \"./apollo\";\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}